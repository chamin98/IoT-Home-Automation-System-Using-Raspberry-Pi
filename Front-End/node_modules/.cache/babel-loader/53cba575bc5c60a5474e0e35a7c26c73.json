{"ast":null,"code":"var _jsxFileName = \"E:\\\\apps\\\\CSE_Iot_Home\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { db } from './services/firebaseServices';\nimport { ref, onValue, query, limitToLast } from \"firebase/database\";\nimport { Header, Stats, Control } from './components/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentTemperature, setCurrentTemperature] = useState();\n  const [temperatures, setTemperatures] = useState([]);\n  const [relays, setRelays] = useState([['Relay 1', false], ['Relay 2', false], ['Relay 3', false]]);\n  useEffect(() => {\n    onValue(ref(db, 'mlx90614/current'), snapshot => {\n      const data = snapshot.val();\n      setCurrentTemperature(data.ambient);\n    });\n    onValue(query(ref(db, \"mlx90614/history/\"), limitToLast(20)), snapshot => {\n      let childData = [];\n      snapshot.forEach(childSnapshot => {\n        childData.push(childSnapshot.val());\n      });\n      setTemperatures(childData);\n    } //{onlyOnce: true}\n    );\n\n    onValue(ref(db, 'Relays'), snapshot => {\n      const data = snapshot.val();\n      setRelays([['Relay 1', data.Relay1], ['Relay 2', data.Relay2], ['Relay 3', data.Relay3]]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      currentTemperature: currentTemperature,\n      temperatures: temperatures\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Control, {\n      relays: relays\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 14\n  }, this);\n};\n_s(App, \"fE0L3MT9+8jEZDMQBkxjoRFujGQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","db","ref","onValue","query","limitToLast","Header","Stats","Control","App","currentTemperature","setCurrentTemperature","temperatures","setTemperatures","relays","setRelays","snapshot","data","val","ambient","childData","forEach","childSnapshot","push","Relay1","Relay2","Relay3"],"sources":["E:/apps/CSE_Iot_Home/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { db } from './services/firebaseServices';\r\nimport { ref, onValue, query, limitToLast } from \"firebase/database\";\r\nimport { Header, Stats, Control } from './components/components'\r\n\r\n\r\nconst App = () => {\r\n    const [currentTemperature, setCurrentTemperature] = useState()\r\n    const [temperatures, setTemperatures] = useState([])\r\n    const [relays, setRelays] = useState([\r\n        ['Relay 1', false],\r\n        ['Relay 2', false],\r\n        ['Relay 3', false]\r\n    ])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        onValue(ref(db, 'mlx90614/current'), snapshot => {\r\n            const data = snapshot.val()\r\n            setCurrentTemperature(data.ambient)\r\n        })\r\n\r\n        onValue(query(ref(db, \"mlx90614/history/\"), limitToLast(20)), snapshot => {\r\n                let childData = []\r\n                snapshot.forEach((childSnapshot) => {\r\n                    childData.push(childSnapshot.val())\r\n                })\r\n                setTemperatures(childData)\r\n            }, //{onlyOnce: true}\r\n        );\r\n\r\n        onValue(ref(db, 'Relays'), snapshot => {\r\n            const data = snapshot.val()\r\n            setRelays([\r\n                ['Relay 1', data.Relay1],\r\n                ['Relay 2', data.Relay2],\r\n                ['Relay 3', data.Relay3]\r\n            ])\r\n        })\r\n    }, [])\r\n    return ( <\r\n        div className = \"container\" >\r\n        <\r\n        Header / >\r\n        <\r\n        Stats currentTemperature = { currentTemperature }\r\n        temperatures = { temperatures }\r\n        /> <\r\n        Control relays = { relays }\r\n        /> <\r\n        /div>\r\n    )\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,6BAA6B;AAChD,SAASC,GAAG,EAAEC,OAAO,EAAEC,KAAK,EAAEC,WAAW,QAAQ,mBAAmB;AACpE,SAASC,MAAM,EAAEC,KAAK,EAAEC,OAAO,QAAQ,yBAAyB;AAAA;AAGhE,MAAMC,GAAG,GAAG,MAAM;EAAA;EACd,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,EAAE;EAC9D,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,CACjC,CAAC,SAAS,EAAE,KAAK,CAAC,EAClB,CAAC,SAAS,EAAE,KAAK,CAAC,EAClB,CAAC,SAAS,EAAE,KAAK,CAAC,CACrB,CAAC;EAOFC,SAAS,CAAC,MAAM;IACZG,OAAO,CAACD,GAAG,CAACD,EAAE,EAAE,kBAAkB,CAAC,EAAEe,QAAQ,IAAI;MAC7C,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,EAAE;MAC3BP,qBAAqB,CAACM,IAAI,CAACE,OAAO,CAAC;IACvC,CAAC,CAAC;IAEFhB,OAAO,CAACC,KAAK,CAACF,GAAG,CAACD,EAAE,EAAE,mBAAmB,CAAC,EAAEI,WAAW,CAAC,EAAE,CAAC,CAAC,EAAEW,QAAQ,IAAI;MAClE,IAAII,SAAS,GAAG,EAAE;MAClBJ,QAAQ,CAACK,OAAO,CAAEC,aAAa,IAAK;QAChCF,SAAS,CAACG,IAAI,CAACD,aAAa,CAACJ,GAAG,EAAE,CAAC;MACvC,CAAC,CAAC;MACFL,eAAe,CAACO,SAAS,CAAC;IAC9B,CAAC,CAAE;IAAA,CACN;;IAEDjB,OAAO,CAACD,GAAG,CAACD,EAAE,EAAE,QAAQ,CAAC,EAAEe,QAAQ,IAAI;MACnC,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,EAAE;MAC3BH,SAAS,CAAC,CACN,CAAC,SAAS,EAAEE,IAAI,CAACO,MAAM,CAAC,EACxB,CAAC,SAAS,EAAEP,IAAI,CAACQ,MAAM,CAAC,EACxB,CAAC,SAAS,EAAER,IAAI,CAACS,MAAM,CAAC,CAC3B,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBAAS;IACD,SAAS,EAAG,WAAW;IAAA,wBAC3B,QACA,MAAM;MAAA;MAAA;MAAA;IAAA,QAAI,eACV,QACA,KAAK;MAAC,kBAAkB,EAAKhB,kBAAoB;MACjD,YAAY,EAAKE;IAAc;MAAA;MAAA;MAAA;IAAA,QAC7B,oBAAC,QACH,OAAO;MAAC,MAAM,EAAKE;IAAQ;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEb,CAAC;AAAA,GAlDKL,GAAG;AAAA,KAAHA,GAAG;AAoDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}